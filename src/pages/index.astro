---
import Layout from "../layouts/Layout.astro";
import Recorder from "../components/Recorder.svelte";
---

<Layout title="Confessr - a place to share">
	<main>
		<h1 class="text-gradient">Hi there.</h1>

		<p>
			This is a simple early experiment. Use the buttons below to request access
			to your microphone and then record whatever you want, a confession, a
			secret, a story, whatever you want to get off your chest (keep it
			anonymous).
		</p>

		<p>
			Once you hit stop, your recorded audio will <strong>1.</strong> appear here
			on the page so you can listen back to it (no one else will see it) and <strong
				>2.</strong
			> be uploaded to my server and I'll take a listen when I can.
		</p>

		<Recorder client:idle />

		<p>
			<em
				>Just an experiment for now from <a href="https://bne.social/@phocks"
					>@phocks@bne.social</a
				> on Mastodon. Note: any recorded audio may be used, at a later date but
				of course it'll remain anonymous, etc.
			</em>
		</p>
		<!-- <h1 class="text-gradient">Hello.</h1>

		<p>
			This is a simple early experiment. Click the button below and your phone
			audio recorder should open up (if you're on mobile, otherwise send a
			pre-recorded sound file from your desktop).
		</p>

		<p>
			Record whatever you want, a confession, a secret, a story, whatever you
			want to get off your chest (keep it anonymous). It will then be uploaded
			to the server and may appear on this page in the future.
		</p>

		<audio id="player" controls></audio>

		<a id="download">Download</a>
		<button id="stop">Stop</button> -->

		<!-- <input
			type="file"
			accept="audio/*"
			capture
			id="recorder"
			style="display:none"
		/>

		<button
			class="send-audio-button"
			style=""
			id="send-audio-button"
			onclick="
			document.getElementById('recorder').click()
			"
			>Send your audio...</button
		> -->

		<!-- <p>
			<em
				>Just an experiment for now from <a href="https://bne.social/@phocks"
					>@phocks@bne.social</a
				> on Mastodon.
			</em>
		</p> -->

		<!-- <script>
			const recorder = document.getElementById("recorder");
			// const player = document.getElementById("player");

			recorder.addEventListener("change", function (e) {
				const file = e.target.files[0];
				const url = URL.createObjectURL(file);
				// Do something with the audio file.
				// player.src = url;

				// Change button text
				const button = document.getElementById("send-audio-button");
				button.innerHTML = "Sending audio...";

				console.log(file);

				const formData = new FormData();

				formData.append("file", file);

				fetch("https://confessions.phocks.org/upload", {
					//  fetch("http://localhost:5000/upload", {
					method: "POST",
					body: formData,
					headers: {
						// "Content-Type": "multipart/form-data",
					},
				})
					.then((res) => {
						console.log(res);
						button.innerHTML = "Audio sent...";
					})
					.catch((err) => {
						button.innerHTML = "Error :(";
						console.error("Error occured", err);
					});
			});
		</script> -->
	</main>
</Layout>

<script>
	// const handleSuccess = async function (stream) {
	// 	const context = new AudioContext();
	// 	const source = context.createMediaStreamSource(stream);

	// 	await context.audioWorklet.addModule("processor.js");
	// 	const worklet = new AudioWorkletNode(context, "worklet-processor");

	// 	source.connect(worklet);
	// 	worklet.connect(context.destination);
	// };

	// navigator.mediaDevices
	// 	.getUserMedia({ audio: true, video: false })
	// 	.then(handleSuccess);

	// ---------------------------------------------

	// const player: any = document.getElementById("player");

	// const handleSuccess = function (stream) {
	// 	if (window.URL) {
	// 		player.srcObject = stream;
	// 	} else {
	// 		player.src = stream;
	// 	}
	// };

	// navigator.mediaDevices
	// 	.getUserMedia({ audio: true, video: false })
	// 	.then(handleSuccess);

	// navigator.mediaDevices.enumerateDevices().then((devices) => {
	// 	devices = devices.filter((d) => d.kind === "audioinput");

	// 	console.log(devices);

	// 	navigator.mediaDevices.getUserMedia({
	// 		audio: {
	// 			deviceId: devices[0].deviceId,
	// 		},
	// 	});
	// });

	// ---------------------------------------------

	// const downloadLink = document.getElementById("download");
	// const stopButton = document.getElementById("stop");

	// const handleSuccess = function (stream) {
	// 	const options = { mimeType: "audio/webm" };
	// 	const recordedChunks = [];
	// 	const mediaRecorder = new MediaRecorder(stream, options);

	// 	mediaRecorder.addEventListener("dataavailable", function (e) {
	// 		if (e.data.size > 0) recordedChunks.push(e.data);
	// 	});

	// 	mediaRecorder.addEventListener("stop", function () {
	// 		downloadLink.href = URL.createObjectURL(new Blob(recordedChunks));
	// 		downloadLink.download = "acetest.wav";
	// 	});

	// 	stopButton.addEventListener("click", function () {
	// 		mediaRecorder.stop();
	// 	});

	// 	mediaRecorder.start();
	// };

	// navigator.mediaDevices
	// 	.getUserMedia({ audio: true, video: false })
	// 	.then(handleSuccess);

	// ---------------------------------------------

	// navigator.permissions.query({ name: "microphone" }).then(function (result) {
	// 	if (result.state == "granted") {
	// 	} else if (result.state == "prompt") {
	// 	} else if (result.state == "denied") {
	// 	}
	// 	result.onchange = function () {};
	// });
</script>

<style>
	main {
		margin: auto;
		padding: 1.5rem;
		max-width: 60ch;
	}

	h1 {
		font-size: 2.5rem;
		font-weight: 800;
		margin: 0;
	}

	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}

	.send-audio-button {
		margin-top: 2rem;
		margin-bottom: 2rem;
		background-color: var(--sunburst-yellow);
		border: 2px solid var(--orange-glow);
		border-radius: 4px;
		color: var(--not-as-dark-text);
		cursor: pointer;
		font-size: 1.1rem;
		padding: 0.5rem 1rem;
		transition: all 0.2s ease;
		display: block;
	}
</style>
